POK kernel initialized
var_POK_CONFIG_SCHEDULING_NBSLOTS initialized! Value: 5
big_random_array initialized!
pok_sched_slots initialized! Value: 
[2000000000, 2000000000, 3000000000, 1000000000, 2000000000]
pok_sched_slots_allocation initialized!
[1, 1, 0, 0, 1]
[P2] thread create (1) returns=0
[P2] thread create (2) returns=0
P2T1: begin of task1
P2T2: begin of task2
[P1] pok_sem_create return=0, mid=0
[P1] pok_thread_create (1) return=0
[P1] pok_thread_create (2) return=0
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: I will wait for the semaphores
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P2T1: begin of task1
P2T2: begin of task2
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P1T2: pok_sem_wait, ret=0
P1T2: pok_sem_wait, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: I will wait for the semaphores
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
P1T2: pok_sem_wait, ret=0
P1T1: I will signal semaphores
P1T1: pok_sem_signal, ret=0
P2T1: begin of task1
P2T2: begin of task2
